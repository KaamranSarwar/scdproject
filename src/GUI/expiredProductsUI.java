package GUI;

import DAO.CategoryDAO;
import DAO.ProductDAO;
import Model.Category;
import Model.Product;
import Model.User;

import javax.swing.*;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/**
 * this is the User interface for showng
 * the Expiredproducts , Near to Expiredproducts
 * and products on low stock
 */
public class expiredProductsUI extends javax.swing.JFrame {

    /**
     * Creates new form expiredProducts
     */
    public expiredProductsUI(User u) {
        user = u;
        initComponents();
        CategoryTree.setModel(getCategoryTree());
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        if(nearToExpire.isSelected()){
            Toplabel.setText("Near to Expire Products ");
            deleteAllproducts.setVisible(false);
            List<Product> p=ProductDAO.getProductsNearExpiry();
            addDataToTable(p);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Toplabel = new javax.swing.JLabel();
        Backbtn = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        deleteAllproducts = new java.awt.Button();
        deleteAllproducts.setForeground(new java.awt.Color(255, 102, 102));
        nearToExpire = new javax.swing.JRadioButton();
        nearToExpire.setForeground(new java.awt.Color(255, 102, 102));
        Expiredproducts = new javax.swing.JRadioButton();
        Expiredproducts.setForeground(new java.awt.Color(255, 102, 102));
        buttonGroup=new ButtonGroup();
        lowstockradiobtn=new JRadioButton();
        lowstockradiobtn.setForeground(new java.awt.Color(255, 102, 102));
        buttonGroup.add(Expiredproducts);
        buttonGroup.add(nearToExpire);
        buttonGroup.add(lowstockradiobtn);
        nearToExpire.setSelected(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        Toplabel.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        Toplabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Toplabel.setText("Near to Expire Poducts");
        Backbtn.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        Backbtn.setLabel("Back");
        Toplabel.setForeground(new java.awt.Color(255, 102, 102));
        nearToExpire.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                nearToExpireActionperformed(e);
            }
        });
        Expiredproducts.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ExpiredproductsActionPerform(e);
            }
        });
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });
        CategoryTree.addTreeSelectionListener(new TreeSelectionListener() {
            @Override
            public void valueChanged(TreeSelectionEvent e) {
                CategoryTreeActionPerform(e);
            }
        });
        jScrollPane1.setViewportView(CategoryTree);

        productTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Id", "Name", "Description", "Toal Packs", "Quantity Per Pack", "Total Quantity", "Price", "Category Name", "Expiry Date"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(productTable);

        deleteAllproducts.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        deleteAllproducts.setForeground(new java.awt.Color(255, 0, 51));
        deleteAllproducts.setLabel("Delete All Products");
        deleteAllproducts.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteAllproductsActionPerform(e);
            }
        });
        nearToExpire.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        nearToExpire.setText("Near To Expire");

        Expiredproducts.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Expiredproducts.setText("expired Products");

        lowstockradiobtn.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lowstockradiobtn.setText("Low Stock");
        lowstockradiobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowstockradiobtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1.setBackground(new java.awt.Color(237, 255, 244));
        Backbtn.setForeground(new java.awt.Color(255, 102, 102));

        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(274, 274, 274)
                                .addComponent(Toplabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(84, 84, 84))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteAllproducts, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(283, 283, 283))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(nearToExpire, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(Expiredproducts, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(lowstockradiobtn, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Toplabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(nearToExpire)
                                        .addComponent(Expiredproducts)
                                        .addComponent(lowstockradiobtn))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 50, Short.MAX_VALUE))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteAllproducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    /**
     * this is a function when low stock radio button is selected it will show th low stock products
     * @param evt
     */
    private void lowstockradiobtnActionPerformed(ActionEvent evt) {
        Toplabel.setText(" Products On Low Stock ");
        deleteAllproducts.setVisible(false);
        List<Product> p=ProductDAO.getLowQuantityProducts();
        addDataToTable(p);
    }

    /**
     * this is function when deleteAllProducts button is pressed it will delete all Expired products from db
     * @param e
     */
    private void deleteAllproductsActionPerform(ActionEvent e) {
        int op = JOptionPane.showConfirmDialog(this,"Do you really want to delete these Expired Products ","Deleting Category",JOptionPane.YES_NO_OPTION);
        System.out.println(op);
        if(op == 0)
        {
            ProductDAO.deleteAllFromExpired();
        }
    }

    /**
     * when clicked on the category tree then this funtion will be called
     * @param e
     */
    private void CategoryTreeActionPerform(TreeSelectionEvent e) {
        TreePath selectedPath = CategoryTree.getSelectionPath();
        int parentID = 0;
        String selectedText=null;
        if (selectedPath != null) {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();
            selectedText= selectedNode.getUserObject().toString();
            parentID = CategoryDAO.getID(selectedText);
        }
        if(nearToExpire.isSelected()){
            if(selectedText!=null){
                List<Product> p=ProductDAO.getProductsByCategoryNearToExpiry(selectedText);
                addDataToTable(p);
            }
            if(selectedText.equals("Categories")){
                List<Product> p=ProductDAO.getProductsNearExpiry();
                addDataToTable(p);
            }
        }
        if(Expiredproducts.isSelected()){
            if(selectedText.equals("Categories")){
                List<Product> p=ProductDAO.getAllExpiredProducts();
                addDataToTable(p);
            }
            else if(selectedText!=null){
                List<Product> p=ProductDAO.getDeletedProductsByCategory(selectedText);
                addDataToTable(p);
            }
        }
        if(lowstockradiobtn.isSelected()){
            if(selectedText.equals("Categories")){
                List<Product> p=ProductDAO.getLowQuantityProducts();
                addDataToTable(p);
            }
            else if(selectedText!=null){
                List<Product> p=ProductDAO.getLowStockProductsByCategory(selectedText);
                addDataToTable(p);
            }
        }
    }

    /**
     * when Expiredproducts radio button is selected this function will be called
     * @param e
     */
    private void ExpiredproductsActionPerform(ActionEvent e) {
        Toplabel.setText("Expired Products");
        deleteAllproducts.setVisible(true);
        List<Product> p=ProductDAO.getAllExpiredProducts();
        addDataToTable(p);
    }

    /**
     * when nearTOExpire radio button is selected this function will be called
     * @param e
     */
    private void nearToExpireActionperformed(ActionEvent e) {
        Toplabel.setText("Near to Expire Products ");
        deleteAllproducts.setVisible(false);
        List<Product> p=ProductDAO.getProductsNearExpiry();
        addDataToTable(p);
    }

    /**
     * this is button to go back to the homepage
     * @param evt
     */
    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        this.dispose();
        new managerhome(user).setVisible(true);
    }

    /**
     * this function returns the root of the category tree from db
     * @return
     */
    private DefaultTreeModel getCategoryTree() {
        List<Category> allCategories = CategoryDAO.getAllCategory();
        DefaultMutableTreeNode root = AddCategoryGUI.buildCategoryTree(allCategories);
        return new DefaultTreeModel(root);
    }

    /**
     * function to add data into the table from the db
     * @param productList
     */
    public void addDataToTable(List<Product> productList) {
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        // Clear existing data from the table
        model.setRowCount(0);

        for (Product product : productList) {
            Object[] rowData = {
                    product.getId(),
                    product.getName(),
                    product.getDescription(),
                    product.getTotalPacks(),
                    product.getQuantityInPack(),
                    product.getTotalQuantity(),
                    product.getPrice(),
                    CategoryDAO.getName(product.getCategoryID()), // Assuming this method exists in your Product class
                    product.getExpDate() // Assuming this method returns a suitable representation of the expiry date
            };
            model.addRow(rowData);
        }
    }

    private final User user;

    // Variables declaration - do not modify
    private java.awt.Button Backbtn;
    private javax.swing.JTree CategoryTree;
    private javax.swing.JRadioButton Expiredproducts;
    private javax.swing.JLabel Toplabel;
    private java.awt.Button deleteAllproducts;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton nearToExpire;
    private javax.swing.JTable productTable;
    private ButtonGroup buttonGroup;
    private JRadioButton lowstockradiobtn;
    // End of variables declaration

}
